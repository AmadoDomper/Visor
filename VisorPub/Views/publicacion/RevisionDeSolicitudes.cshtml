@{
    Layout = null;
}

<script src="~/Content/js/utils.min.js"></script>
<link type="text/css" rel="stylesheet" href="~/Content/css/jsgrid.css" />
<link type="text/css" rel="stylesheet" href="~/Content/css/jsgrid-theme.css" />
<script type="text/javascript" src="~/Content/js/jsgrid.js"></script>

<script type="text/javascript">
        var Model = @Html.Raw(Json.Encode(@Model));
</script>


<div class="col-lg-11 col-lg-offset-0-5">
    <input id="hdnEstado" type="hidden" />
    <input id="hdnPubId" type="hidden" />
    <input id="hdnUsuId" type="hidden" />
    <input id="hdnHistId" type="hidden" />
    <input id="hdnUHistId" type="hidden" />
    <input id="hdnPag" type="hidden" />
    @*<div class="row">*@
    <div id="target1" class="panel move panel-inverse active m-t-5">
        <div class="panel-heading"><span class="glyphicon glyphicon-th" aria-hidden="true"></span> Revisión de Solicitudes</div>
        <div class="panel-body">
            @*<div class="row">
                    <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                        <input href="#target2" id="btnNuevaNota" type="button" class="btn btn-sm btn-success target" value="Registre su publicación" />
                    </div>
                </div>*@
            @*<div class="hr-line-dashed"></div>*@
            <div class="row m-b-10">
                <div class="col-sm-11">
                    <div class="form-inline">
                        <div class="form-group m-r-40">
                            <label class="control-label m-r-5" for="status">Mostrar publicación estado:</label>
                            <select name="status" id="cmbPubEstado" class="form-control">
                                <option value="1" selected="">Solicitado</option>
                                <option value="2">Aprobado</option>
                                <option value="3">Observado</option>
                                <option value="4">Rechazado</option>
                            </select>
                        </div>
                        <div class="form-group m-r-10">
                            <label class="control-label m-r-5" for="product_name">Buscar por:</label>
                            <select name="status" id="cmbTpoBsq" class="form-control">
                                <option value="1" selected="">Código</option>
                                <option value="2">Título</option>
                                <option value="3">Investigador</option>
                                <option value="4">Institución</option>
                                @*<option value="4">Rango de Fecha</option>*@
                            </select>
                        </div>
                        <div class="form-group">
                            <input type="text" id="txtValor" class="form-control">
                            <div class="input-daterange input-group" id="dtRango" style="display: none;">
                                <input id="txtFI" type="text" class="form-control" name="start">
                                <span class="input-group-addon">al</span>
                                <input id="txtFF" type="text" class="form-control" name="end">
                            </div>
                        </div>
                        <input id="btnBuscarPub" type="button" value="Buscar" class="btn btn-sm btn-primary">
                    </div>
                </div>
            </div>
            <div class="row table-main">
                <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                    <div id="cntListaPublicaciones" class="table-responsive">
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div id="target2" class="panel move panel-inverse m-t-5" data-sortable-id="form-stuff-1" style="display: none;">
        <div class="panel-heading">
            <h4 class="panel-title">Publicación</h4>
        </div>
        <div class="panel-body" style="display: block;">
            <div class="row">
                <div class="col-lg-12">
                    <form id="frm" data-smk-icon="glyphicon-asterisk">
                        <div class="row">
                            <div class="col-md-12">
                                <div class="form-group">
                                    <label>Titulo</label>
                                    <input type="text" class="form-control" placeholder="Titulo" id="txtTitulo" name="txtTitulo" required="">
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-7">
                                <div class="row">
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            <label>Tipo</label>
                                            <select class="form-control" id="ddlTipo" name="ddlTipo" required></select>
                                        </div>
                                    </div>
                                    <div class="col-md-3">
                                        <div class="form-group">
                                            <label>Año Publicación</label>
                                            <select class="form-control" id="txtAnoPublicacion" name="txtAnoPublicacion" required></select>
                                        </div>
                                    </div>
                                    <div class="col-md-5">
                                        <div class="form-group">
                                            <label>Área Temática</label><br />
                                            @*<select class="form-control" id="ddlTema" name="ddlTema" multiple="multiple" required></select>*@
                                            <select class="form-control" id="ddlTema" name="ddlTema" required></select>
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-12">
                                        <div class="form-group">
                                            <label>Enlace (URL)</label>
                                            <input type="url" class="form-control" placeholder="Enlace" id="txtEnlace" name="txtEnlace" required="">
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-5">
                                <div class="row">
                                    <div class="col-md-12">
                                        <div class="form-group">
                                            <label>Referencia bibliográfica</label>
                                            <textarea class="form-control" id="txtReferencia" name="txtReferencia" rows="5" placeholder="Ingrese aquí la referencia bibligráfica de acuerdo al formato." value="" minlength="1" required="" style="margin: 0px;"></textarea>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <h3>Información georeferencial</h3>
                                <div class="row">
                                    <div class="col-md-4">
                                        <input type="button" class="btn btn-success btn-block btn-fill m-b-10 active" value="Agregar punto" id="btAddPunto" name="btAddPunto">
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-12">
                                        <div id="jsGrid"></div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <h3>Vista Previa</h3>
                                <div class="col-md-12">
                                    <div style="width: 100%; height: 500px" id="map"></div>
                                </div>
                            </div>
                        </div>
                        <div class="row m-t-5">
                            <div class="col-md-4">
                                <div class="col-md-6">
                                    <input type="button" class="btn btn-warning btn-block btn-fill" style="margin-top: 0px;" value="Historial" id="btnHistorial">
                                </div>
                            </div>
                            <div class="col-md-2">
                                <button type="button" class="btn btn-block btn-primary" style="margin-top: 0px;" value="Aprobar" id="btnAprobar"><i class="fa fa-check" aria-hidden="true"></i> Aprobar</button>
                            </div>
                            <div class="col-md-2">
                                <button type="button" class="btn btn-success btn-block btn-fill" style="margin-top: 0px;" value="Observar" id="btnObservar"><i class="fa fa-search" aria-hidden="true"></i> Observar</button>
                            </div>
                            <div class="col-md-2">
                                <button type="button" class="btn btn-danger btn-block btn-fill" style="margin-top: 0px;" value="Rechazar" id="btnRechazar"><i class="fa fa-times" aria-hidden="true"></i> Rechazar</button>
                                @*<input type="button" class="btn btn-primary btn-block btn-fill" style="display:none;" value="Aceptar" id="btnAceptarMod" name="btnAceptarMod">
                                    <input type="button" class="btn btn-primary btn-block btn-fill" style="margin-top: 0px;" value="Modificar" id="btnModificar">*@
                            </div>
                            <div class="col-md-2">
                                <input type="button" class="btn btn-default btn-block btn-fill" value="Cancelar" id="btcancelar" name="btcancelar">
                            </div>
                        </div>
                    </form>

                </div>
            </div>

        </div>
    </div>

    @*</div>*@


</div>


<script type="text/javascript">

    jQuery(function ($) {
        $('input.target').click(function () {
            vista($(this).attr('href'));
        });

        $('#ddlTipo').dropdowlist({
            dataShow: 'cDesc',
            dataValue: 'nTipoId',
            dataselect: 'nTipoId',
            datalist: Model.lsTipos
        });

        var myDate = new Date();
        var year = myDate.getFullYear(); var values = '<option value="">Elige una opción</option>';
        for (var i = 1900; i < year + 1; i++) {
            values += '<option value="' + i + '">' + i + '</option>';
        }
        $("#txtAnoPublicacion").html(values);

        $('#ddlTema').dropdowlist({
            dataShow: 'cDesc',
            dataValue: 'nTemaId',
            dataselect: 'nTemaId',
            datalist: Model.lsTemas
        });

        /*Grilla*/
        CargarGrilla();
        /*Fin de la grilla*/

        $('#btAddPunto').click(function () {
            $().addPunto({
                alAceptar: function (lat, lng) {
                    indexFeature++;
                    var info = lng + '|' + lat;
                    var item = { "n": indexFeature, "Tipo": 1, "Info": info,"Longitud": lng, "Latitud": lat};
                    $("#jsGrid").jsGrid("insertItem", item);

                    lsFeatures.push(item);
                    map_AgregarPunto([lng, lat],indexFeature);
                }
            });
        });

        $('#btnAceptarMod').click(function () {
            if ($('#frm').smkValidate()) {
                $.fn.Conexion({
                    direccion: '@Url.Action("EditarPublicacion", "Publicacion")',
                    bloqueo: true,
                    datos: {
                        "pub_idpublicacion": $("#hdnPubId").val(),
                        "pub_anopublicacion": $('#txtAnoPublicacion').val(),
                        "pub_referenciabibliografica": $('#txtReferencia').val(),
                        "pub_enlace": $('#txtEnlace').val(),
                        "tip_idtipo": $('#ddlTipo').val(),
                        "ls_tem_idtema": $('#ddlTema').val(),
                        "features": JSON.stringify(lsFeatures),
                        "pub_titulo": $('#txtTitulo').val()
                    },
                    terminado: function (data) {
                        data = JSON.parse(data);
                        alert(data.mensaje);
                    }
                });
            }
        });
    });


    var vista = function ($target) {
        var $target = $($target),
            $other = $('.panel-inverse.active');

        if (!$target.hasClass('active')) {
            $other.each(function (index, self) {
                var $this = $(this);
                $this.removeClass('active').animate({
                    left: $this.width()
                }, 500).hide();
            });

            $target.addClass('active').show().css({
                left: -($target.width())
            }).animate({
                left: 0
            }, 500);
        }
    };



    var lsFeatures;
    var lsVectorLayers;
    var indexFeature;

    function IniciaDatos(){
         lsFeatures = Array();
         lsVectorLayers = Array();
         indexFeature = 0;
    }

    function quitarElemento(id) {

        //map.getLayers().forEach(function (layer) {
        //    if (layer instanceof ol.layer.Vector){
        //        if (layer.getSource().getFeatures()[0].getId() == id){
        //            map.removeLayer(layer);
        //        }
        //    }
        //});

        var layer = map.getLayers().getArray()[1].getSource();
        layer.removeFeature(layer.getFeatureById(id));

        for (var i = 0; i < lsFeatures.length; i++) {
            if (lsFeatures[i].n == id) {
                lsFeatures.splice(i, 1);
                //map.removeLayer(lsVectorLayers[i])
                //lsVectorLayers.splice(i, 1);
                //indexFeature--;
                break;
            }
        }
    }

    

    /*Control del mapa*/

    //var vectorSource = new ol.source.Vector({});

    var vistaMap = new ol.View({
        center: ol.proj.transform([-75, -9], 'EPSG:4326', 'EPSG:3857'),
        zoom: 5
    });

    var map = new ol.Map({
        target: 'map',
        view: vistaMap,

        controls: ol.control.defaults().extend([
            new ol.control.ScaleLine(),
            new ol.control.ZoomSlider(),
            new ol.control.FullScreen()
        ])
    });

    map.on('pointermove', function(evt) { 
        map.getTargetElement().style.cursor =
            map.hasFeatureAtPixel(evt.pixel) ? 'pointer' : '';
    });

    var wmsLayer2 = new ol.layer.Tile({
        source: new ol.source.OSM({
            projection: 'EPSG:3857',
            url: 'http://mt{0-3}.google.com/vt/lyrs=m&x={x}&y={y}&z={z}',
            attributions: [
            ]
        })
    });
    map.addLayer(wmsLayer2);


    /*Features*/

    var styleFunction = (function() {
        /* jshint -W069 */
        var styles = {};
        var image = new ol.style.Circle({
            radius: 3,
            fill: new ol.style.Fill({color: '#ff4444'}),
            //stroke: new ol.style.Stroke({color: '#FF0000', width: 1})
        });
        styles['Point'] = [new ol.style.Style({image: image})];
        styles['default'] = [new ol.style.Style({
            stroke: new ol.style.Stroke({
                color: 'green',
                width: 10
            }),
            fill: new ol.style.Fill({
                color: 'rgba(255, 5, 0, 0.1)'
            }),
            image: image
        })];
        return function(feature, resolution) {
            return styles[feature.getGeometry().getType()] || styles['default'];
        };
        /* jshint +W069 */
    })();


    var vectorLayer = new ol.layer.Vector({ 
        source: new ol.source.Vector({
        }),
        style: styleFunction
    })

    map.addLayer(vectorLayer);

    function map_AgregarPunto(punto,index) {

        var point_feature = new ol.Feature({});
        var point_geom = new ol.geom.Point(ol.proj.transform([+punto[0], +punto[1]], 'EPSG:4326', 'EPSG:3857'));
        point_feature.setGeometry(point_geom);

        map.getLayers().getArray()[1].getSource().addFeature(point_feature);

        point_feature.setId(index);
        console.log(index);
    }

    var features = Array();

    function ColorId(id, c) {
        map.getLayers().forEach(function (layer) {
            if (layer instanceof ol.layer.Vector) {
                console.log(layer);
                layer.getSource().forEachFeature(function (feature) {
                    console.log(feature.getId());
                    if (feature.getId() == id) {
                        console.log(feature);
                        features.push(feature);
                        console.log(features);
                        feature.setStyle(new ol.style.Style({
                            image: new ol.style.Circle({
                                radius: 5,
                                fill: new ol.style.Fill({
                                    color: 'yellow'
                                })
                            }),
                            zIndex: 100000
                        }));
                        return true;
                    }
                });
            }
        });
    }

    function LimpiarColor() {
        if (features.length > 0) {
            features[0].setStyle(new ol.style.Style({
                image: new ol.style.Circle({
                    radius: 3,
                    fill: new ol.style.Fill({
                        color: '#ff4444'
                    })
                })
            }));

            features = Array();
        }
    }


    function CargarGrilla() {

        $("#jsGrid").jsGrid({
            width: "100%",
            height: "400px",
            sorting: true,
            paging: false,
            deleteConfirm: "¿Estás seguro de eliminar?",
            noDataContent: "Sin datos",
            //data: datos,

            fields: [
                { name: "Longitud", type: "text",align: "center", width: 100 },
                { name: "Latitud", type: "text", align: "center", width: 100 },
                { type: "control", editButton: false }
            ],
            onItemDeleted: function (args) {
                quitarElemento(args.item.n);
                console.log(lsFeatures);
            },
            rowClick: function myfunction(args) {
                //alert(args.item.n);
                LimpiarColor();
                ColorId(args.item.n);
            }
        });
    }

    ListarRevPub();

    function ListarRevPub(nPage, nSize) {
        var nPubId,cPubTitulo,cNom,cInst;
        var nPubEst = $("#cmbPubEstado").val();
        var tpoBsq = $("#cmbTpoBsq").val();
        var valor = $("#txtValor").val();
        valor = valor == "" ? null : valor;

        switch (tpoBsq) {
            case "1":
                {
                    nPubId = valor;
                    break;
                }
            case "2":
                {
                    cPubTitulo = valor;
                    break;
                }
            case "3":
                {
                    cNom = valor;
                    break;
                }
            case "4":
                {
                    cInst = valor;
                    break;
                }
        }

        $.fn.Conexion({
            direccion: '@Url.Action("ListarRevPublicaciones", "Publicacion")',
            datos: { "nPubEst": nPubEst, "nPage": nPage, "nSize": nSize, "nPubId": nPubId, "cPubTitulo": cPubTitulo, "cInst": cInst, "cNom": cNom },
            bloqueo: true,
            terminado: function (data) {
                var d = JSON.parse(data);

                $("#cntListaPublicaciones").Tabla({
                    tblId: "tblPublicaciones",
                    cabecera: "#,Título,Investigador,Institución,F. Creación,Estado,HistId",
                    campos: "Id,titulo,usuario.cNom, usuario.cInst, cFeReg,cEstado,oHist.UniqueId",
                    scrollVertical: "Si",
                    tipoCampo: ",,,,,",
                    alinear: "C,L,C,C,C,C",
                    cellLen: "50,200,100,100,80,80,0,50,50",
                    cantRegVertical: 15,
                    pag: true,
                    pagDato: { "nPage": d.nPage, "nPageTot": d.nPageTot, "nPageSize": d.nPageSize, "nRows": d.nRows },
                    pagEvent: ListarRevPub,
                    edit: true,
                    hist: true,
                    dblClick: true,
                    histEvent: function (fila) {
                        let cHistid = fila.find("td").eq(6).html();

                        window.open(
                            'http://localhost:59423/Historial/Publicaciones/' + cHistid,
                            '_blank'
                        );
                    },           
                    editEvent: function (fila) {
                        var nPubId = fila.find("td").eq(0).html();
                        $("#hdnEstado").val("E");
                        //$('input.target')[0].click();
                        vista("#target2");

                        $.fn.Conexion({
                            direccion: '@Url.Action("CargaDatosPublicacion", "Publicacion")',
                            datos: { "nPubId": nPubId },
                            terminado: function (data, textStatus, jqXHR) {
                                var oPub = JSON.parse(data);

                                $('#hdnPubId').val(oPub.Id);
                                $('#hdnUsuId').val(oPub.nUsuId);
                                $('#hdnHistId').val(oPub.oHist.Id);
                                $('#hdnUHistId').val(oPub.oHist.UniqueId);
                                $("#hdnPubEst").val(oPub.nEstado);
                                $('#txtTitulo').val(oPub.titulo);
                                $('#ddlTipo').val(oPub.tipo.id);
                                $('#ddlTema').val(oPub.lsTemas[0].id);
                                $('#txtAnoPublicacion').val(oPub.ano);
                                $('#txtEnlace').val(oPub.enlace);
                                $('#txtReferencia').val(oPub.refBi);

                                $("#jsGrid").jsGrid('destroy');
                                IniciaDatos();
                                CargarGrilla();

                                for (var i = 0; i < oPub.lsFeatures.length; i++) {
                                    var punto = oPub.lsFeatures[i].Info.split(' ');
                                    indexFeature++;

                                    var info = punto[0] + '|' + punto[1];
                                    var item = { "n": indexFeature, "Tipo": 1, "Info": info,"Longitud": punto[0], "Latitud": punto[1]};
                                    $("#jsGrid").jsGrid("insertItem", item);

                                    lsFeatures.push(item);
                                    map_AgregarPunto(punto, indexFeature);
                                }

                                map.updateSize();

                                if (oPub.nEstado == 1) {
                                    SetEstadoSolicitado();
                                } else if (oPub.nEstado == 2) {
                                    SetEstadoAprobado();
                                } else if (oPub.nEstado == 3) {
                                    SetEstadoObservado();
                                } else if (oPub.nEstado == 4) {
                                    SetEstadoRechazado();
                                }
                            },
                            bloqueo: true
                        });
                    },
                    datos: d.oLista
                });
            }
        });
    }

    function SetEstadoSolicitado() {
        $("#target2 :input").prop("disabled", true);
        $("#btnAprobar,#btnObservar,#btnRechazar").prop("disabled", false);
        $("#btcancelar").prop("disabled", false);
        $("#btnHistorial").prop("disabled", false);
        $("#btnModificar").prop("disabled", false).show();
        $("#btnAceptarMod").hide();
    }

    function SetEstadoAprobado() {
        $("#btnAprobar,#btnObservar,#btnRechazar").attr("disabled", true);
    }

    function SetEstadoObservado() {
        $("#btnAprobar,#btnObservar,#btnRechazar").attr("disabled", true);
    }

    function SetEstadoRechazado() {
        $("#btnAprobar,#btnObservar,#btnRechazar").attr("disabled", true);
    }

    $("#btnModificar").bind("click",function (){
        $("#target2 :input").prop("disabled", false);
        $("#btnModificar").hide();
        $("#btnAceptarMod").prop("disabled", false).show();
    });

    $("#btcancelar").bind("click", function () {
        Limpiar();
        vista("#target1");
    });

    $("#btnBuscarPub").bind("click", function () {
        ListarRevPub();
    });

    $("#btnHistorial").bind("click", function () {
        let cHistid = $("#hdnUHistId").val();

        window.open(
            'http://localhost:59423/Historial/Publicaciones/' + cHistid,
            '_blank'
        );
    });


    $("#btnAprobar").bind("click", function () {
        $.fn.Mensaje({ titulo: "Mensaje", tipo: "AcepCanc", mensaje: "¿Esta seguro de Aprobar la publicación?", funcionAceptar: Aprobar  });
    });

    $("#btnObservar").bind("click", function () {
        $.fn.Mensaje({ titulo: "Mensaje", tipo: "AcepCanc", mensaje: "¿Esta seguro de Observar la publicación?", funcionAceptar: Observar });
    });

    $("#btnRechazar").bind("click", function () {
        $.fn.Mensaje({ titulo: "Mensaje", tipo: "AcepCanc", mensaje: "¿Esta seguro de Rechazar la publicación?", funcionAceptar: Rechazar });
    });

    function Aprobar() {
            let nPubId = $("#hdnPubId").val();
            let nHistId = $("#hdnHistId").val();
            let nUHistId = $("#hdnUHistId").val();
            let nUsuId = $('#hdnUsuId').val();

            $.fn.Conexion({
                direccion: '@Url.Action("RegistrarAprobacion", "Publicacion")',
                datos: { "nPubId": nPubId, "nUsuId": nUsuId , "nHistId": nHistId, "nUHistId": nUHistId},
                    terminado: function (data, textStatus, jqXHR) {
                        $.fn.Mensaje({ titulo: "Mensaje", mensaje: "Aprobación registrada correctamente." });
                    },
                    bloqueo: true
            });
    }

    function Observar() {
        $.fn.Ventana({
            id: "vntMotivoObservacion",
            titulo: "Registre motivo de la Observación",
            tamano: "md"
        });

        let html = `
                    <textarea class="form-control" id="txtObservacion" name="txtObservacion" rows="10" placeholder="Ingrese aquí las observaciones encontradas" value="" minlength="1"></textarea>
                    <div class="col-sm-12 hr-line-dashed"></div>
                        <div class="col-sm-12 text-center">
                        <button id="btnObsAceptar" type="submit" class="btn btn-sm btn-primary m-r-5">Aceptar</button>
                        <button id="btnObsCancelar" type="submit" data-dismiss="modal" aria-hidden="true" class="btn btn-sm btn-default">Cancelar</button>
                    </div>`;

        $("#vntMotivoObservacion .panel-body").html(html);
        $('#vntMotivoObservacion').modal('show');

        $("#btnObsAceptar").bind("click", function () {

            let nPubId = $("#hdnPubId").val();
            let nHistId = $("#hdnHistId").val();
            let nUHistId = $("#hdnUHistId").val();
            let cMensaje = $("#txtObservacion").val();
            let nUsuId = $('#hdnUsuId').val();

            $.fn.Conexion({
                direccion: '@Url.Action("RegistrarObservacion", "Publicacion")',
                durante: function () {
                    $('#vntMotivoObservacion').modal('hide');
                },
                datos: { "nPubId": nPubId, "nUsuId": nUsuId , "nHistId": nHistId, "nUHistId": nUHistId, "cMensaje": cMensaje},
                    terminado: function (data, textStatus, jqXHR) {
                        $.fn.Mensaje({ titulo: "Mensaje", mensaje: "Observación registrada correctamente." });
                    },
                    bloqueo: true
                });
        });
    }

    function Rechazar() {
        $.fn.Ventana({
            id: "vntMotivoRechazar",
            titulo: "Registre motivo del Rechazo",
            tamano: "md"
        });

        let html = `
                    <textarea class="form-control" id="txtRechazo" name="txtRechazo" rows="10" placeholder="Ingrese aquí el motivo del rechazo" value="" minlength="1"></textarea>
                    <div class="col-sm-12 hr-line-dashed"></div>
                        <div class="col-sm-12 text-center">
                        <button id="btnRecAceptar" type="submit" class="btn btn-sm btn-primary m-r-5">Aceptar</button>
                        <button id="btnRecCancelar" type="submit" data-dismiss="modal" aria-hidden="true" class="btn btn-sm btn-default">Cancelar</button>
                    </div>`;

        $("#vntMotivoRechazar .panel-body").html(html);
        $('#vntMotivoRechazar').modal('show');

        $("#btnRecAceptar").bind("click", function () {
            let nPubId = $("#hdnPubId").val();
            let nHistId = $("#hdnHistId").val();
            let nUHistId = $("#hdnUHistId").val();
            let cMensaje = $("#txtRechazo").val();
            let nUsuId = $('#hdnUsuId').val();

            $.fn.Conexion({
                direccion: '@Url.Action("RegistrarRechazo", "Publicacion")',
                datos: { "nPubId": nPubId, "nUsuId": nUsuId, "nHistId": nHistId, "nUHistId": nUHistId, "cMensaje": cMensaje },
                durante: function () {
                    $('#vntMotivoRechazar').modal('hide');
                },
                terminado: function (data, textStatus, jqXHR) {
                    $.fn.Mensaje({ titulo: "Mensaje", mensaje: "Rechazo registrado correctamente." });
                },
                    bloqueo: true
                });
        });
    }


    $("#txtValor").keyup(function (e) {
        if (e.which == 13) { ListarRevPub(); }
    });

    function Limpiar() {
        $('#frm')[0].reset();
        $("#hdnUHistId").val("");
        $("#hdnPubId").val("");

        //lsVectorLayers.forEach(function (entry) {
        //    map.removeLayer(entry)
        //});

        map.getLayers().getArray()[1].getSource().clear();


        lsFeatures = Array();
        //$("#jsGrid").jsGrid('destroy');
        //CargarGrilla();
        //lstProd = [];
        //$("input[type=hidden],#txtCodNota").val("");
        //$("#lblNom,#lblDOI,#lblTel,#tblRegProd tbody").html("");
        //RestablecerElem();
        //DeshabilitarBotones();
    }



</script>